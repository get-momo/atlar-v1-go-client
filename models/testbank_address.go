// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TestbankAddress testbank address
//
// swagger:model testbank.Address
type TestbankAddress struct {

	// city
	City string `json:"city,omitempty"`

	// ISO 3166-1 alpha-2 country code. Examples: DE, DK, SE
	Country string `json:"country,omitempty"`

	// postal code
	PostalCode string `json:"postalCode,omitempty"`

	// International unstructured address lines, as they might appear on a mailing label, are presented in their raw, unformatted form. This array is populated with raw address lines only when Atlar receives such information from the bank. While the bank might not always provide these lines, when available, they will appear here in their unaltered state.
	RawAddressLines []string `json:"rawAddressLines"`

	// street name
	StreetName string `json:"streetName,omitempty"`

	// street number
	StreetNumber string `json:"streetNumber,omitempty"`
}

// Validate validates this testbank address
func (m *TestbankAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this testbank address based on context it is used
func (m *TestbankAddress) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TestbankAddress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestbankAddress) UnmarshalBinary(b []byte) error {
	var res TestbankAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
